{"ast":null,"code":"var _jsxFileName = \"/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Components/TabView/createTab.js\";\nimport React, { Component } from \"react\";\nimport { SHA256 } from \"crypto-js\";\nimport TextField from \"material-ui/TextField\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { connect } from \"react-redux\";\nimport Metaverse from \"metaversejs\";\nimport { postStoreAction } from \"../../Actions/postStore\";\nimport { getStoreAction } from \"../../Actions/getStore\";\nimport { getMitsAction } from \"../../Actions/MitGeneration\";\nimport { getAvatar } from \"../../BlockchainLogic/Faucet\";\nimport { issueMIT } from \"../../BlockchainLogic/MitLogic\";\nimport { getMits } from \"../../BlockchainLogic/MitLogic\";\nimport { updateItem } from \"../../utils/idb\";\nimport \"./Tabs.css\";\n\nclass CreateTab extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hash: \"\",\n      password: \"\",\n      meta: \"\",\n      fileName: \"\",\n      file: [],\n      checkboxStatus: false,\n      loading: false,\n      recordStatus: true,\n      contentStatus: true,\n      mitContent: \"\",\n      error: null\n    };\n\n    this.processFile = files => {\n      const file = files[0];\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        const data = event.target.result;\n        this.setState({\n          recordStatus: false\n        });\n        this.setState({\n          hash: SHA256(data) + \"\"\n        });\n      };\n\n      reader.readAsBinaryString(file);\n    };\n\n    this.handleClick = async () => {\n      if (!this.state.loading) {\n        const mnemonic = this.props.mnemonic;\n        const wallet = await Metaverse.wallet.fromMnemonic(mnemonic, \"testnet\");\n        console.log(this.props.avatar, \"avatar in createTab.js as a prop\");\n\n        if (await getAvatar(this.props.avatar)) {\n          await issueMIT(wallet, this.state.mitContent, this.state.hash);\n          const addresses = await wallet.getAddresses();\n          const mits = await getMits(addresses);\n          await updateItem(\"mits\", mits);\n          this.props.getMitsAction(mits);\n          this.setState({\n            loading: true\n          }, () => {\n            this.timer = setTimeout(() => {}, this.state.loading);\n            this.state.password ? this.props.postStoreAction(this.state.file, this.state.hash, this.state.password, this.state.meta, this) : this.props.getStoreAction(this.state.hash, this);\n          });\n        } else {\n          this.setState({\n            error: \"Blockchain did not find any avatar related to your account. Try again after 3 minutes.\"\n          });\n        }\n      }\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      checkboxStatus: e.target.checked\n    }, () => {\n      console.log(this.state.checkboxStatus);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"#050607\",\n        fontWeight: \"600\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Record your document hash on the blockchain\"), React.createElement(\"span\", {\n      style: {\n        // fontFamily: \"Proxima Nova\",\n        fontWeight: \"500\",\n        color: \"#000000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"The hash is a sha256 hash of the content of your document.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \"The filename is not part of the calculation.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), this.props.successMsg === \"SUCCESS\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"#050607\",\n        // fontFamily: \"Proxima Nova\",\n        fontWeight: \"500\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Your hash has been successfully added to the ledger.\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.hash)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-none d-xl-block d-lg-block d-md-block d-sm-block col-xl-3 col-lg-3 col-md-2 col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-3 col-md-4 col-sm-4 col-xs-6\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: e => {\n        this.processFile(e.target.files); // this.handleFileName(e.target.files);\n\n        console.log(e.target.files[0]);\n        this.setState({\n          file: e.target.files[0]\n        });\n      },\n      name: \"selectedFile\",\n      style: {\n        display: \"none\"\n      },\n      className: \"inputfile inputfile-6\",\n      \"data-multiple-caption\": \"{count} files selected\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"input-group mb-3\",\n      htmlFor: \"fileInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-light dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenuButton\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Browse\"), React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenuButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Audiovisual Works\"), React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Dramatic Works\"), React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Legal Documentation\"), React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Literary Works\"), React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Musical Works\"), React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Pictorial/Graphical Works\"), React.createElement(\"a\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Other\"))), React.createElement(\"input\", {\n      className: \"form-control\",\n      \"aria-label\": \"Text input with dropdown button\",\n      placeholder: this.state.file.name ? this.state.file.name : \"Please Select A File\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"d-none d-xl-block d-lg-block d-md-block d-sm-block col-xl-3 col-lg-3 col-md-2 col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-8 col-sm-6 col-xs-12\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input form-control-lg\",\n      id: \"customCheck\",\n      onChange: e => this.handleChange(e),\n      name: \"example1\",\n      style: {\n        padding: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"customCheck\",\n      style: {\n        fontWeight: \"400\",\n        color: \"#000000\",\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Save the file online\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(MuiThemeProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-helperText\",\n      placeholder: \"Your Token Symbol\",\n      className: \"mitInput\",\n      variant: \"outlined\",\n      onChange: e => this.setState({\n        mitContent: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })))), this.state.checkboxStatus === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\",\n      style: {\n        padding: \"0% 6% 0% 6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password (Optional)\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      className: \"form-control mb-3 mt-2\",\n      style: {\n        paddingLeft: \"25px\",\n        fontFamily: \"Proxima Nova\",\n        color: \"#BDBEBE\",\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mt-1 mb-2\",\n      style: {\n        fontFamily: \"Proxima Nova\",\n        fontWeight: \"400\",\n        fontSize: \"12px\",\n        color: \"#000000\",\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"You can in addition add a password. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), \"In that case, you will need both the hash and the password to download the file\")), React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }))) : \"\"), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.props.errorMsg === \"DUPLICATE_ENTRY\" ? React.createElement(\"kbd\", {\n      style: {\n        fontFamily: \"Proxima Nova\",\n        fontSize: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"This document has already been registered.\\xA0\\xA0\", React.createElement(\"span\", {\n      style: {\n        color: \"#FF0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Warning!!!\")) : \"\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\",\n      style: {\n        padding: \"0% 6% 0% 6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), this.state.error ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, this.state.error) : \"\", this.props.successMsg === \"SUCCESS\" ? React.createElement(\"button\", {\n      onClick: () => {\n        window.location.reload();\n      },\n      className: \"mt-4 mb-5 btn btn-create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Record Another\") : this.state.recordStatus === true ? React.createElement(\"button\", {\n      disabled: true,\n      className: \"mt-4 mb-5 btn btn-create-disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Record\") : React.createElement(\"button\", {\n      className: \"mt-4 mb-5 btn btn-create\",\n      disabled: this.state.loading && !this.state.symbol ? true : false,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"i\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), !this.state.loading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Record\"))), React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  successMsg: state.ProveitReducer.successMsg,\n  // SuccessMsg: state.ProveitReducer.getStoreSuccessMsg,\n  errorMsg: state.ProveitErrorReducer.StoreErrorMsg,\n  // ErrorMsg: state.ProveitErrorReducer.getStoreErrorMsg\n  avatar: state.ProveitReducer.avatar,\n  mnemonic: state.ProveitReducer.mnemonic\n}); //grab avatar and address here from reducer\n//pass these to action and to MitLogic.js\n\n\nexport default connect(mapStateToProps, {\n  postStoreAction,\n  getStoreAction,\n  getMitsAction\n})(CreateTab);","map":{"version":3,"sources":["/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Components/TabView/createTab.js"],"names":["React","Component","SHA256","TextField","MuiThemeProvider","connect","Metaverse","postStoreAction","getStoreAction","getMitsAction","getAvatar","issueMIT","getMits","updateItem","CreateTab","state","hash","password","meta","fileName","file","checkboxStatus","loading","recordStatus","contentStatus","mitContent","error","processFile","files","reader","FileReader","onload","event","data","target","result","setState","readAsBinaryString","handleClick","mnemonic","props","wallet","fromMnemonic","console","log","avatar","addresses","getAddresses","mits","timer","setTimeout","handleChange","e","checked","render","color","fontWeight","successMsg","marginTop","display","name","padding","marginLeft","value","paddingLeft","fontFamily","borderRadius","fontSize","textAlign","errorMsg","window","location","reload","symbol","mapStateToProps","ProveitReducer","ProveitErrorReducer","StoreErrorMsg"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SHA256 } from \"crypto-js\";\nimport TextField from \"material-ui/TextField\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { connect } from \"react-redux\";\nimport Metaverse from \"metaversejs\";\n\nimport { postStoreAction } from \"../../Actions/postStore\";\nimport { getStoreAction } from \"../../Actions/getStore\";\nimport { getMitsAction } from \"../../Actions/MitGeneration\";\n\nimport { getAvatar } from \"../../BlockchainLogic/Faucet\";\nimport { issueMIT } from \"../../BlockchainLogic/MitLogic\";\nimport { getMits } from \"../../BlockchainLogic/MitLogic\";\nimport { updateItem } from \"../../utils/idb\";\nimport \"./Tabs.css\";\n\nclass CreateTab extends Component {\n  state = {\n    hash: \"\",\n    password: \"\",\n    meta: \"\",\n    fileName: \"\",\n    file: [],\n    checkboxStatus: false,\n    loading: false,\n    recordStatus: true,\n    contentStatus: true,\n    mitContent: \"\",\n    error: null\n  };\n  processFile = files => {\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const data = event.target.result;\n      this.setState({ recordStatus: false });\n      this.setState({ hash: SHA256(data) + \"\" });\n    };\n    reader.readAsBinaryString(file);\n  };\n  handleChange(e) {\n    this.setState({ checkboxStatus: e.target.checked }, () => {\n      console.log(this.state.checkboxStatus);\n    });\n  }\n  handleClick = async () => {\n    if (!this.state.loading) {\n      const mnemonic = this.props.mnemonic;\n      const wallet = await Metaverse.wallet.fromMnemonic(mnemonic, \"testnet\");\n      console.log(this.props.avatar, \"avatar in createTab.js as a prop\");\n      if (await getAvatar(this.props.avatar)) {\n        await issueMIT(wallet, this.state.mitContent, this.state.hash);\n        const addresses = await wallet.getAddresses();\n        const mits = await getMits(addresses);\n        await updateItem(\"mits\", mits);\n        this.props.getMitsAction(mits);\n        this.setState(\n          {\n            loading: true\n          },\n          () => {\n            this.timer = setTimeout(() => {}, this.state.loading);\n            this.state.password\n              ? this.props.postStoreAction(\n                  this.state.file,\n                  this.state.hash,\n                  this.state.password,\n                  this.state.meta,\n                  this\n                )\n              : this.props.getStoreAction(this.state.hash, this);\n          }\n        );\n      } else {\n        this.setState({\n          error:\n            \"Blockchain did not find any avatar related to your account. Try again after 3 minutes.\"\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <h3\n            style={{\n              color: \"#050607\",\n              fontWeight: \"600\"\n            }}\n          >\n            Record your document hash on the blockchain\n          </h3>\n\n          <span\n            style={{\n              // fontFamily: \"Proxima Nova\",\n              fontWeight: \"500\",\n              color: \"#000000\"\n            }}\n          >\n            The hash is a sha256 hash of the content of your document.\n            <br />\n            The filename is not part of the calculation.\n            <br />\n          </span>\n\n          {this.props.successMsg === \"SUCCESS\" ? (\n            <div>\n              <h3\n                style={{\n                  color: \"#050607\",\n                  // fontFamily: \"Proxima Nova\",\n                  fontWeight: \"500\"\n                }}\n              >\n                Your hash has been successfully added to the ledger.\n              </h3>\n              <span>{this.state.hash}</span>\n            </div>\n          ) : (\n            <div>\n              <div className=\"row\">\n                <div className=\"d-none d-xl-block d-lg-block d-md-block d-sm-block col-xl-3 col-lg-3 col-md-2 col-sm-2\" />\n                <div\n                  className=\"col-xl-6 col-lg-3 col-md-4 col-sm-4 col-xs-6\"\n                  style={{ marginTop: \"20px\" }}\n                >\n                  <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    onChange={e => {\n                      this.processFile(e.target.files);\n                      // this.handleFileName(e.target.files);\n                      console.log(e.target.files[0]);\n                      this.setState({ file: e.target.files[0] });\n                    }}\n                    name=\"selectedFile\"\n                    style={{ display: \"none\" }}\n                    className=\"inputfile inputfile-6\"\n                    data-multiple-caption=\"{count} files selected\"\n                    multiple\n                  />\n\n                <label className=\"input-group mb-3\" htmlFor=\"fileInput\">\n                  <div className=\"input-group-prepend\">\n                    <button className=\"btn btn-light dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                      Browse\n                    </button>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                      <a className=\"dropdown-item\" >Audiovisual Works</a>\n                      <a className=\"dropdown-item\" >Dramatic Works</a>\n                      <a className=\"dropdown-item\" >Legal Documentation</a>\n                      <a className=\"dropdown-item\" >Literary Works</a>\n                      <a className=\"dropdown-item\" >Musical Works</a>\n                      <a className=\"dropdown-item\" >Pictorial/Graphical Works</a>\n                      <a className=\"dropdown-item\" >Other</a>\n                    </div>\n                  </div>\n                  <input  className=\"form-control\" aria-label=\"Text input with dropdown button\" placeholder ={this.state.file.name\n                    ? this.state.file.name\n                    : \"Please Select A File\"} disabled\n                    />\n                </label>\n                </div>\n\n                <div className=\"d-none d-xl-block d-lg-block d-md-block d-sm-block col-xl-3 col-lg-3 col-md-2 col-sm-2\" />\n              </div>\n              <div className=\"row justify-content-center\">\n                <div\n                  className=\"col-xl-3 col-lg-3 col-md-8 col-sm-6 col-xs-12\"\n                  style={{ marginTop: \"20px\" }}\n                >\n                  <div className=\"custom-control custom-checkbox mb-3\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input form-control-lg\"\n                      id=\"customCheck\"\n                      onChange={e => this.handleChange(e)}\n                      name=\"example1\"\n                      style={{ padding: \"100px\" }}\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor=\"customCheck\"\n                      style={{\n                        fontWeight: \"400\",\n                        color: \"#000000\",\n                        marginLeft: \"10px\"\n                      }}\n                    >\n                      Save the file online\n                    </label>\n                  </div>\n                  <br />\n                  <MuiThemeProvider>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      placeholder=\"Your Token Symbol\"\n                      className=\"mitInput\"\n                      variant=\"outlined\"\n                      onChange={e =>\n                        this.setState({ mitContent: e.target.value })\n                      }\n                    />\n                  </MuiThemeProvider>\n                </div>\n              </div>\n              {this.state.checkboxStatus === true ? (\n                <div>\n                  <div className=\"row\">\n                    <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n                    <div\n                      className=\"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\"\n                      style={{ padding: \"0% 6% 0% 6%\" }}\n                    >\n                      <input\n                        type=\"password\"\n                        placeholder=\"Password (Optional)\"\n                        onChange={e =>\n                          this.setState({ password: e.target.value })\n                        }\n                        className=\"form-control mb-3 mt-2\"\n                        style={{\n                          paddingLeft: \"25px\",\n                          fontFamily: \"Proxima Nova\",\n                          color: \"#BDBEBE\",\n                          borderRadius: \"10px\"\n                        }}\n                      />\n                    </div>\n                    <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-3\" />\n                    <div className=\"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-6\">\n                      <span\n                        className=\"mt-1 mb-2\"\n                        style={{\n                          fontFamily: \"Proxima Nova\",\n                          fontWeight: \"400\",\n                          fontSize: \"12px\",\n                          color: \"#000000\",\n                          marginLeft: \"10px\"\n                        }}\n                      >\n                        You can in addition add a password. <br />\n                        In that case, you will need both the hash and the\n                        password to download the file\n                      </span>\n                    </div>\n                    <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-3\" />\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n          <div\n            className=\"row\"\n            style={{ textAlign: \"center\", marginTop: \"20px\" }}\n          >\n            <div className=\"col-12\">\n              {this.props.errorMsg === \"DUPLICATE_ENTRY\" ? (\n                <kbd style={{ fontFamily: \"Proxima Nova\", fontSize: \"16px\" }}>\n                  This document has already been registered.&nbsp;&nbsp;\n                  <span\n                    style={{\n                      color: \"#FF0000\"\n                    }}\n                  >\n                    Warning!!!\n                  </span>\n                </kbd>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n            <div\n              className=\"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\"\n              style={{ padding: \"0% 6% 0% 6%\" }}\n            >\n              <br />\n              {this.state.error ? (\n                <span className=\"error\">{this.state.error}</span>\n              ) : (\n                \"\"\n              )}\n              {this.props.successMsg === \"SUCCESS\" ? (\n                <button\n                  onClick={() => {\n                    window.location.reload();\n                  }}\n                  className=\"mt-4 mb-5 btn btn-create\"\n                >\n                  Record Another\n                </button>\n              ) : this.state.recordStatus === true ? (\n                <button disabled className=\"mt-4 mb-5 btn btn-create-disabled\">\n                  Record\n                </button>\n              ) : (\n                <button\n                  className=\"mt-4 mb-5 btn btn-create\"\n                  disabled={\n                    this.state.loading && !this.state.symbol ? true : false\n                  }\n                  onClick={this.handleClick}\n                >\n                  {this.state.loading && (\n                    <i className=\"spinner-border\" role=\"status\" />\n                  )}\n                  {!this.state.loading && <span>Record</span>}\n                </button>\n              )}\n            </div>\n            <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  successMsg: state.ProveitReducer.successMsg,\n  // SuccessMsg: state.ProveitReducer.getStoreSuccessMsg,\n  errorMsg: state.ProveitErrorReducer.StoreErrorMsg,\n  // ErrorMsg: state.ProveitErrorReducer.getStoreErrorMsg\n  avatar: state.ProveitReducer.avatar,\n  mnemonic: state.ProveitReducer.mnemonic\n});\n\n//grab avatar and address here from reducer\n//pass these to action and to MitLogic.js\n\nexport default connect(mapStateToProps, {\n  postStoreAction,\n  getStoreAction,\n  getMitsAction\n})(CreateTab);\n"]},"metadata":{},"sourceType":"module"}