{"ast":null,"code":"import { STORE, STORE_ERR_MESSAGE } from \"./types\";\nimport { BaseURL } from \"./BaseURL\";\nimport axios from \"axios\"; //used when users adds file with a password\n\nexport const postStoreAction = (file, hash, password, meta, crtl) => dispatch => {\n  const fd = new FormData();\n  fd.append(\"file\", file[0]);\n  fd.append(\"hash\", hash);\n  fd.append(\"password\", password);\n  fd.append(\"meta\", meta);\n  axios.post(BaseURL + \"/store\", fd).then(res => {\n    dispatch({\n      type: STORE,\n      payload: res.data\n    });\n\n    if (res.data) {\n      crtl.setState({\n        loading: false\n      });\n      crtl.setState({\n        contentStatus: false\n      });\n    }\n  }).catch(err => {\n    dispatch({\n      type: STORE_ERR_MESSAGE,\n      payload: err.response.data\n    });\n\n    if (err.response.data === \"DUPLICATE_ENTRY\") {\n      crtl.setState({\n        loading: false\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Actions/postStore.js"],"names":["STORE","STORE_ERR_MESSAGE","BaseURL","axios","postStoreAction","file","hash","password","meta","crtl","dispatch","fd","FormData","append","post","then","res","type","payload","data","setState","loading","contentStatus","catch","err","response"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,iBAAhB,QAAyC,SAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAC7BC,IAD6B,EAE7BC,IAF6B,EAG7BC,QAH6B,EAI7BC,IAJ6B,EAK7BC,IAL6B,KAM1BC,QAAQ,IAAI;AACf,QAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkBR,IAAI,CAAC,CAAD,CAAtB;AACAM,EAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkBP,IAAlB;AACAK,EAAAA,EAAE,CAACE,MAAH,CAAU,UAAV,EAAsBN,QAAtB;AACAI,EAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkBL,IAAlB;AACAL,EAAAA,KAAK,CACFW,IADH,CACQZ,OAAO,GAAG,QADlB,EAC4BS,EAD5B,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEjB,KADC;AAEPkB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;;AAIA,QAAIH,GAAG,CAACG,IAAR,EAAc;AACZV,MAAAA,IAAI,CAACW,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAZ,MAAAA,IAAI,CAACW,QAAL,CAAc;AAAEE,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD;AACF,GAXH,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZd,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEhB,iBADC;AAEPiB,MAAAA,OAAO,EAAEM,GAAG,CAACC,QAAJ,CAAaN;AAFf,KAAD,CAAR;;AAIA,QAAIK,GAAG,CAACC,QAAJ,CAAaN,IAAb,KAAsB,iBAA1B,EAA6C;AAC3CV,MAAAA,IAAI,CAACW,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF,GApBH;AAqBD,CAjCM","sourcesContent":["import { STORE, STORE_ERR_MESSAGE } from \"./types\";\nimport { BaseURL } from \"./BaseURL\";\nimport axios from \"axios\";\n\n//used when users adds file with a password\nexport const postStoreAction = (\n  file,\n  hash,\n  password,\n  meta,\n  crtl\n) => dispatch => {\n  const fd = new FormData();\n  fd.append(\"file\", file[0]);\n  fd.append(\"hash\", hash);\n  fd.append(\"password\", password);\n  fd.append(\"meta\", meta);\n  axios\n    .post(BaseURL + \"/store\", fd)\n    .then(res => {\n      dispatch({\n        type: STORE,\n        payload: res.data\n      });\n      if (res.data) {\n        crtl.setState({ loading: false });\n        crtl.setState({ contentStatus: false });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: STORE_ERR_MESSAGE,\n        payload: err.response.data\n      });\n      if (err.response.data === \"DUPLICATE_ENTRY\") {\n        crtl.setState({ loading: false });\n      }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}