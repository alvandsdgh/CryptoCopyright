{"ast":null,"code":"import { STORE, STORE_ERR_MESSAGE } from \"./types\";\nimport { BaseURL } from \"./BaseURL\";\nimport axios from \"axios\";\nexport const getStoreAction = (hash, crtl) => dispatch => {\n  axios.get(BaseURL + \"/store?hash=\" + hash).then(res => {\n    dispatch({\n      type: STORE,\n      payload: res.data //SUCCESS STATUS\n\n    });\n\n    if (res.data) {\n      crtl.setState({\n        loading: false\n      });\n      crtl.setState({\n        contentStatus: false\n      });\n    }\n  }).catch(err => {\n    dispatch({\n      type: STORE_ERR_MESSAGE,\n      payload: err.response.data\n    });\n\n    if (err.response.data === \"DUPLICATE_ENTRY\") {\n      crtl.setState({\n        loading: false\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Actions/getStore.js"],"names":["STORE","STORE_ERR_MESSAGE","BaseURL","axios","getStoreAction","hash","crtl","dispatch","get","then","res","type","payload","data","setState","loading","contentStatus","catch","err","response"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,iBAAhB,QAAyC,SAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgBC,QAAQ,IAAI;AACxDJ,EAAAA,KAAK,CACFK,GADH,CACON,OAAO,GAAG,cAAV,GAA2BG,IADlC,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,KADC;AAEPY,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAFN,CAEW;;AAFX,KAAD,CAAR;;AAIA,QAAIH,GAAG,CAACG,IAAR,EAAc;AACZP,MAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAT,MAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEE,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD;AACF,GAXH,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZX,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,iBADC;AAEPW,MAAAA,OAAO,EAAEM,GAAG,CAACC,QAAJ,CAAaN;AAFf,KAAD,CAAR;;AAIA,QAAIK,GAAG,CAACC,QAAJ,CAAaN,IAAb,KAAsB,iBAA1B,EAA6C;AAC3CP,MAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF,GApBH;AAqBD,CAtBM","sourcesContent":["import { STORE, STORE_ERR_MESSAGE } from \"./types\";\nimport { BaseURL } from \"./BaseURL\";\nimport axios from \"axios\";\n\nexport const getStoreAction = (hash, crtl) => dispatch => {\n  axios\n    .get(BaseURL + \"/store?hash=\" + hash)\n    .then(res => {\n      dispatch({\n        type: STORE,\n        payload: res.data //SUCCESS STATUS\n      });\n      if (res.data) {\n        crtl.setState({ loading: false });\n        crtl.setState({ contentStatus: false });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: STORE_ERR_MESSAGE,\n        payload: err.response.data\n      });\n      if (err.response.data === \"DUPLICATE_ENTRY\") {\n        crtl.setState({ loading: false });\n      }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}