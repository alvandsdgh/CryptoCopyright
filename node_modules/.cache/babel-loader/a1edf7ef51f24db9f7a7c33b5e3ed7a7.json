{"ast":null,"code":"var _jsxFileName = \"/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Components/TabView/verifyTab.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { SHA256 } from \"crypto-js\";\nimport { getProveAction } from \"../../Actions/getProve\";\nimport { getDownloadAction } from \"../../Actions/getDownload\";\nimport { connect } from \"react-redux\";\nimport { BaseURL } from \"../../Actions/BaseURL\";\nimport axios from \"axios\";\nimport \"./Tabs.css\";\nimport \"./detail.css\";\n\nclass VerifyTab extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hash: \"\",\n      name: \"\",\n      password: \"\",\n      loading: false,\n      hashExists: false,\n      txId: \"\"\n    };\n\n    this.checkHash = async hash => {\n      const interval = setInterval(async () => {\n        // const hashURL = `https://explorer-testnet.mvs.org/mit/${hash}`;\n        const hashURL = \"https://proveit-muffins.firebaseapp.com/api/prove?hash=\".concat(hash);\n        const response = await axios.get(hashURL);\n\n        if (response.data.status === \"published\") {\n          this.setState({\n            hashExists: true,\n            txId: response.data.proofs[0].txid\n          });\n          clearInterval(interval);\n        }\n      }, 10000);\n    };\n\n    this.processFileVerify = files => {\n      const file = files[0];\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        const data = event.target.result;\n        this.setState({\n          hash: SHA256(data) + \"\"\n        });\n      };\n\n      reader.readAsBinaryString(file);\n    };\n\n    this.handleVerifyFileName = files => {\n      const file = files[0];\n      this.setState({\n        name: file.name\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        fontWeight: \"800\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Verify your document on the blockchain\"), this.props.proveSuccessMessage ? React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.props.proveSuccessMessage.hasPassword ? React.createElement(\"div\", {\n      className: \"col-12 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\",\n      style: {\n        padding: \"0% 6% 0% 6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"10px\",\n        fontSize: \"30px\"\n      },\n      className: \"form-control form-control-lg\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      type: \"password\",\n      value: this.state.password,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })) : \"\", this.props.proveSuccessMessage.hasFile ? React.createElement(\"div\", {\n      className: \"col-12 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\",\n      style: {\n        padding: \"0% 6% 0% 6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: BaseURL + \"/download?hash=\" + this.state.hash + \"&password=\" + this.state.password,\n      target: BaseURL + \"/download?hash=\" + this.state.hash + \"&password=\" + this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: this.state.password ? false : true // onClick={() => {\n      //   this.props.getDownloadAction(\n      //     this.state.hash,\n      //     this.state.password,\n      //     this\n      //   );\n      // }}\n      ,\n      className: \"mt-4 mb-5 btn btn-verify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Download\"))), React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : \"\", React.createElement(\"div\", {\n      className: \"col-12\",\n      style: {\n        marginTop: \"-20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"summary\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"titleValue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: this.state.hashExists ? \"\" : \"hidden\",\n      href: \"https://explorer-testnet.mvs.org/tx/\".concat(this.state.txId),\n      target: \"https://explorer-testnet.mvs.org/tx/\".concat(this.state.txId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      style: {\n        fontSize: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Metaverse official explorer\")), React.createElement(\"div\", {\n      className: \"loading-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.hashExists ? \"start\" : \"\",\n      id: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))))))))) : React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: \"600\",\n        fontSize: \"18px\",\n        color: \"#6F706F\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        color: \"#17BCDE\",\n        textDecoration: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Learn more.\")), React.createElement(\"div\", {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileInputVerify\",\n      name: \"selectedFile\",\n      onChange: e => {\n        this.processFileVerify(e.target.files);\n        this.handleVerifyFileName(e.target.files);\n      },\n      style: {\n        display: \"none\"\n      },\n      className: \"inputfile inputfile-6\",\n      \"data-multiple-caption\": \"{count} files selected\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fileInputVerify\",\n      className: \"btn btn-lg w-50\",\n      style: {\n        backgroundColor: \"#F9F7F7\",\n        padding: \"2%\",\n        border: \"2px solid #D4D1D0\",\n        // color: \"#969696\",\n        fontSize: \"20px\",\n        display: \"inline-block\",\n        borderRadius: \"14px\",\n        marginTop: \"16px\",\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"BROWSE A File...\")), React.createElement(\"div\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: \"400\",\n        color: \"#BDBEBE\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.state.name ? this.state.name : \"Report.pdf\"))), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        // color: \"#6F706F\",\n        fontWeight: \"600\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Input a Document Hash\"), React.createElement(\"span\", {\n      style: {\n        fontWeight: \"400\",\n        fontSize: \"16px\",\n        color: \"#6F706F\",\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Input the SHA256 checksum hexadecimal digest for your file here.\"), React.createElement(\"div\", {\n      style: {\n        padding: \"4% 4% 4% 6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        borderRadius: \"10px\",\n        fontSize: \"30px\"\n      },\n      className: \"form-control form-control-lg\",\n      onChange: e => this.setState({\n        hash: e.target.value\n      }),\n      type: \"text\",\n      value: this.state.hash,\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, this.props.ErrMsg === \"Item not found. Proof failed.\" ? React.createElement(\"kbd\", {\n      style: {\n        fontSize: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"This document not found.\\xA0\\xA0\", React.createElement(\"span\", {\n      style: {\n        color: \"#FF0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Error...\")) : \"\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\",\n      style: {\n        padding: \"0% 6% 0% 6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"mt-4 mb-5 btn btn-verify\",\n      style: {\n        fontWeight: \"700\"\n      },\n      onClick: () => {\n        if (!this.state.hashExists) {\n          this.checkHash(this.state.hash);\n\n          if (!this.state.loading) {\n            this.setState({\n              loading: true\n            }, () => {\n              this.timer = setTimeout(() => {}, this.state.loading);\n              this.props.getProveAction(this.state.hash, this);\n            });\n          }\n        } else {\n          window.location.reload();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"i\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), !this.state.loading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, this.state.hashExists ? \"Verify New\" : \"Verify\"))), React.createElement(\"div\", {\n      className: \"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ErrMsg: state.ProveitErrorReducer.ProveErrorMsg,\n  proveSuccessMessage: state.ProveitReducer.proveSuccessMsg,\n  downloadErrorMessage: state.ProveitErrorReducer.DownloadErrorMsg,\n  downloadSuccessMessage: state.ProveitReducer.downloadSuccessMsg\n});\n\nexport default connect(mapStateToProps, {\n  getProveAction,\n  getDownloadAction\n})(VerifyTab);","map":{"version":3,"sources":["/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Components/TabView/verifyTab.js"],"names":["React","Component","Fragment","SHA256","getProveAction","getDownloadAction","connect","BaseURL","axios","VerifyTab","state","hash","name","password","loading","hashExists","txId","checkHash","interval","setInterval","hashURL","response","get","data","status","setState","proofs","txid","clearInterval","processFileVerify","files","file","reader","FileReader","onload","event","target","result","readAsBinaryString","handleVerifyFileName","render","fontWeight","props","proveSuccessMessage","textAlign","hasPassword","padding","borderRadius","fontSize","e","value","hasFile","marginTop","color","textDecoration","display","backgroundColor","border","cursor","marginLeft","ErrMsg","timer","setTimeout","window","location","reload","mapStateToProps","ProveitErrorReducer","ProveErrorMsg","ProveitReducer","proveSuccessMsg","downloadErrorMessage","DownloadErrorMsg","downloadSuccessMessage","downloadSuccessMsg"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { SHA256 } from \"crypto-js\";\nimport { getProveAction } from \"../../Actions/getProve\";\nimport { getDownloadAction } from \"../../Actions/getDownload\";\nimport { connect } from \"react-redux\";\nimport { BaseURL } from \"../../Actions/BaseURL\";\nimport axios from \"axios\";\n\nimport \"./Tabs.css\";\nimport \"./detail.css\";\n\nclass VerifyTab extends Component {\n  state = {\n    hash: \"\",\n    name: \"\",\n    password: \"\",\n    loading: false,\n    hashExists: false,\n    txId: \"\"\n  };\n\n  checkHash = async hash => {\n    const interval = setInterval(async () => {\n      // const hashURL = `https://explorer-testnet.mvs.org/mit/${hash}`;\n      const hashURL = `https://proveit-muffins.firebaseapp.com/api/prove?hash=${hash}`;\n      const response = await axios.get(hashURL);\n      if (response.data.status === \"published\") {\n        this.setState({\n          hashExists: true,\n          txId: response.data.proofs[0].txid\n        });\n        clearInterval(interval);\n      }\n    }, 10000);\n  };\n\n  processFileVerify = files => {\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const data = event.target.result;\n      this.setState({ hash: SHA256(data) + \"\" });\n    };\n    reader.readAsBinaryString(file);\n  };\n  handleVerifyFileName = files => {\n    const file = files[0];\n    this.setState({ name: file.name });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <h3\n            style={{\n              fontWeight: \"800\"\n            }}\n          >\n            Verify your document on the blockchain\n          </h3>\n          {this.props.proveSuccessMessage ? (\n            <div className=\"row\">\n              <div\n                className=\"col-12\"\n                style={{\n                  textAlign: \"center\"\n                }}\n              ></div>\n              {this.props.proveSuccessMessage.hasPassword ? (\n                <div className=\"col-12 row\">\n                  <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n                  <div\n                    className=\"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\"\n                    style={{ padding: \"0% 6% 0% 6%\" }}\n                  >\n                    <input\n                      style={{ borderRadius: \"10px\", fontSize: \"30px\" }}\n                      className=\"form-control form-control-lg\"\n                      onChange={e =>\n                        this.setState({ password: e.target.value })\n                      }\n                      type=\"password\"\n                      value={this.state.password}\n                      placeholder=\"Password\"\n                    />\n                  </div>\n                  <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n                </div>\n              ) : (\n                \"\"\n              )}\n              {this.props.proveSuccessMessage.hasFile ? (\n                <div className=\"col-12 row\">\n                  <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n                  <div\n                    className=\"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\"\n                    style={{ padding: \"0% 6% 0% 6%\" }}\n                  >\n                    <a\n                      href={\n                        BaseURL +\n                        \"/download?hash=\" +\n                        this.state.hash +\n                        \"&password=\" +\n                        this.state.password\n                      }\n                      target={\n                        BaseURL +\n                        \"/download?hash=\" +\n                        this.state.hash +\n                        \"&password=\" +\n                        this.state.password\n                      }\n                    >\n                      <button\n                        disabled={this.state.password ? false : true}\n                        // onClick={() => {\n                        //   this.props.getDownloadAction(\n                        //     this.state.hash,\n                        //     this.state.password,\n                        //     this\n                        //   );\n                        // }}\n                        className=\"mt-4 mb-5 btn btn-verify\"\n                      >\n                        Download\n                      </button>\n                    </a>\n                  </div>\n                  <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n                </div>\n              ) : (\n                \"\"\n              )}\n              <div className=\"col-12\" style={{ marginTop: \"-20px\" }}>\n                <div className=\"panel\">\n                  {/* <details style={{ overflowX: \"auto\", overflowY: \"hidden\" }}> */}\n                  <summary>\n                    <ul>\n                      <li className=\"titleValue\">\n                        <Fragment>\n                          <a\n                            className={this.state.hashExists ? \"\" : \"hidden\"}\n                            href={`https://explorer-testnet.mvs.org/tx/${this.state.txId}`}\n                            target={`https://explorer-testnet.mvs.org/tx/${this.state.txId}`}\n                          >\n                            <b style={{ fontSize: 25 }}>\n                              Metaverse official explorer\n                            </b>\n                          </a>\n                          <div className=\"loading-bar\">\n                            <div\n                              className={this.state.hashExists ? \"start\" : \"\"}\n                              id=\"bar\"\n                            ></div>\n                          </div>\n                        </Fragment>\n                      </li>\n                    </ul>\n                  </summary>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"row mt-5\">\n              <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                <span\n                  style={{\n                    fontWeight: \"600\",\n                    fontSize: \"18px\",\n                    color: \"#6F706F\"\n                  }}\n                >\n                  \n                  <a\n                    href=\"#\"\n                    style={{ color: \"#17BCDE\", textDecoration: \"none\" }}\n                  >\n                    Learn more.\n                  </a>\n                </span>\n                <div className=\"mt-4\">\n                  <input\n                    type=\"file\"\n                    id=\"fileInputVerify\"\n                    name=\"selectedFile\"\n                    onChange={e => {\n                      this.processFileVerify(e.target.files);\n                      this.handleVerifyFileName(e.target.files);\n                    }}\n                    style={{ display: \"none\" }}\n                    className=\"inputfile inputfile-6\"\n                    data-multiple-caption=\"{count} files selected\"\n                    multiple\n                  />\n                  <label\n                    htmlFor=\"fileInputVerify\"\n                    className=\"btn btn-lg w-50\"\n                    style={{\n                      backgroundColor: \"#F9F7F7\",\n                      padding: \"2%\",\n                      border: \"2px solid #D4D1D0\",\n                      // color: \"#969696\",\n                      fontSize: \"20px\",\n                      display: \"inline-block\",\n                      borderRadius: \"14px\",\n                      marginTop: \"16px\",\n                      cursor: \"pointer\"\n                    }}\n                  >\n                    BROWSE A File...\n                  </label>\n                </div>\n                <div className=\"mt-2\">\n                  <span\n                    style={{\n                      fontWeight: \"400\",\n                      color: \"#BDBEBE\"\n                    }}\n                  >\n                    {this.state.name ? this.state.name : \"Report.pdf\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                <h2\n                  style={{\n                    // color: \"#6F706F\",\n                    fontWeight: \"600\"\n                  }}\n                >\n                  Input a Document Hash\n                </h2>\n                <span\n                  style={{\n                    fontWeight: \"400\",\n                    fontSize: \"16px\",\n                    color: \"#6F706F\",\n                    marginLeft: \"10px\"\n                  }}\n                >\n                  Input the SHA256 checksum hexadecimal digest for your file\n                  here.\n                </span>\n                <div style={{ padding: \"4% 4% 4% 6%\" }}>\n                  <input\n                    style={{ borderRadius: \"10px\", fontSize: \"30px\" }}\n                    className=\"form-control form-control-lg\"\n                    onChange={e => this.setState({ hash: e.target.value })}\n                    type=\"text\"\n                    value={this.state.hash}\n                    placeholder=\"\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div\n            className=\"row\"\n            style={{ textAlign: \"center\", marginTop: \"20px\" }}\n          >\n            <div className=\"col-12\">\n              {this.props.ErrMsg === \"Item not found. Proof failed.\" ? (\n                <kbd style={{ fontSize: \"16px\" }}>\n                  This document not found.&nbsp;&nbsp;\n                  <span\n                    style={{\n                      color: \"#FF0000\"\n                    }}\n                  >\n                    Error...\n                  </span>\n                </kbd>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n            <div\n              className=\"col-xl-6 col-lg-6 col-md-8 col-sm-8 col-xs-8\"\n              style={{ padding: \"0% 6% 0% 6%\" }}\n            >\n              <button\n                className=\"mt-4 mb-5 btn btn-verify\"\n                style={{ fontWeight: \"700\" }}\n                onClick={() => {\n                  if (!this.state.hashExists) {\n                    this.checkHash(this.state.hash);\n                    if (!this.state.loading) {\n                      this.setState(\n                        {\n                          loading: true\n                        },\n                        () => {\n                          this.timer = setTimeout(() => {}, this.state.loading);\n                          this.props.getProveAction(this.state.hash, this);\n                        }\n                      );\n                    }\n                  } else {\n                    window.location.reload();\n                  }\n                }}\n              >\n                {this.state.loading && (\n                  <i className=\"spinner-border\" role=\"status\" />\n                )}\n                {!this.state.loading && (\n                  <span>{this.state.hashExists ? \"Verify New\" : \"Verify\"}</span>\n                )}\n              </button>\n            </div>\n            <div className=\"col-xl-3 col-lg-3 col-md-2 col-sm-2 col-xs-2\" />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ErrMsg: state.ProveitErrorReducer.ProveErrorMsg,\n  proveSuccessMessage: state.ProveitReducer.proveSuccessMsg,\n  downloadErrorMessage: state.ProveitErrorReducer.DownloadErrorMsg,\n  downloadSuccessMessage: state.ProveitReducer.downloadSuccessMsg\n});\n\nexport default connect(mapStateToProps, { getProveAction, getDownloadAction })(\n  VerifyTab\n);\n"]},"metadata":{},"sourceType":"module"}