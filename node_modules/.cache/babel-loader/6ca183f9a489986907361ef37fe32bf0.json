{"ast":null,"code":"import { DOWNLOAD, DOWNLOAD_ERR_MESSAGE } from \"./types\";\nimport { BaseURL } from \"./BaseURL\";\nimport axios from \"axios\";\nexport const getDownloadAction = (hash, password, crtl) => dispatch => {\n  axios.get(BaseURL + \"/download?hash=\" + hash + \"&password=\" + password).then(res => {\n    dispatch({\n      type: DOWNLOAD,\n      payload: res.data\n    });\n\n    if (res.data) {\n      crtl.setState({\n        loading: false\n      });\n    }\n  }).catch(err => {\n    dispatch({\n      type: DOWNLOAD_ERR_MESSAGE,\n      payload: err.response.data\n    });\n\n    if (err.response.data) {\n      crtl.setState({\n        loading: false\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/alvandsadeghi/Desktop/Projects/ccr/cryptocopyright120919/Crypto-Copyright/src/Actions/getDownload.js"],"names":["DOWNLOAD","DOWNLOAD_ERR_MESSAGE","BaseURL","axios","getDownloadAction","hash","password","crtl","dispatch","get","then","res","type","payload","data","setState","loading","catch","err","response"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,oBAAnB,QAA+C,SAA/C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,IAAjB,KAA0BC,QAAQ,IAAI;AACrEL,EAAAA,KAAK,CACFM,GADH,CACOP,OAAO,GAAG,iBAAV,GAA8BG,IAA9B,GAAqC,YAArC,GAAoDC,QAD3D,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,QADC;AAEPa,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;;AAIA,QAAIH,GAAG,CAACG,IAAR,EAAc;AACZP,MAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF,GAVH,EAWGC,KAXH,CAWSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,oBADC;AAEPY,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,CAAaL;AAFf,KAAD,CAAR;;AAIA,QAAII,GAAG,CAACC,QAAJ,CAAaL,IAAjB,EAAuB;AACrBP,MAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF,GAnBH;AAoBD,CArBM","sourcesContent":["import { DOWNLOAD, DOWNLOAD_ERR_MESSAGE } from \"./types\";\nimport { BaseURL } from \"./BaseURL\";\nimport axios from \"axios\";\n\nexport const getDownloadAction = (hash, password, crtl) => dispatch => {\n  axios\n    .get(BaseURL + \"/download?hash=\" + hash + \"&password=\" + password)\n    .then(res => {\n      dispatch({\n        type: DOWNLOAD,\n        payload: res.data\n      });\n      if (res.data) {\n        crtl.setState({ loading: false });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: DOWNLOAD_ERR_MESSAGE,\n        payload: err.response.data\n      });\n      if (err.response.data) {\n        crtl.setState({ loading: false });\n      }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}