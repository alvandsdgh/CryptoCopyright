{"ast":null,"code":"var _jsxFileName = \"/Users/alvandsadeghi/Desktop/Projects/Final CryptoCopyright/Crypto-Copyright/src/Components/TabView/Mits/listMits.jsx\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport { getMits } from \"../../../BlockchainLogic/MitLogic\";\nimport { getAvatar } from \"../../../BlockchainLogic/Faucet\";\nimport { getMitsAction } from \"../../../Actions/MitGeneration\";\nimport { updateItem, getItem } from \"../../../utils/idb\";\nimport \"./listMits.css\";\n\nclass ListMits extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.handleRefresh = async () => {\n      this.setState({\n        loading: true\n      });\n      const mits = await getMits([this.address]);\n      this.props.getMitsAction(mits);\n      await updateItem(\"mits\", mits);\n      setTimeout(() => this.setState({\n        loading: false\n      }), 1000);\n    };\n  }\n\n  async componentDidMount() {\n    let _ref = await getItem(\"accountInfo\"),\n        avatar = _ref.avatar;\n\n    let avatarInfo = await getAvatar((await avatar));\n\n    if (await avatarInfo) {\n      this.address = await avatarInfo.address;\n      let mits = await getMits([await this.address]);\n      await updateItem(\"mits\", mits);\n      this.props.getMitsAction(mits);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.mits.length ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(CircularProgress, {\n      color: \"#aaa\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require(\"../../../Assets/Logo/refresh-button.png\"),\n      alt: \"Refresh Button\",\n      className: \"refreshImg\",\n      onClick: this.handleRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      className: \"mitContainer\",\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.mits.map(mit => React.createElement(Grid, {\n      key: mit.symbol,\n      className: \"cardHolder\",\n      item: true,\n      container: true,\n      sx: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card\",\n      key: mit.symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      avatar: React.createElement(Avatar, {\n        alt: \"default metaverse mit icon\",\n        src: require(\"../../../Assets/Logo/WechatIMG187.jpeg\"),\n        \"aria-label\": \"recipe\",\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      title: mit.content,\n      subheader: \"Owned By: \".concat(mit.owner),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Your File Hash : \"), mit.symbol))))))) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(CircularProgress, {\n      color: \"#aaa\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: require(\"../../../Assets/Logo/refresh-button.png\"),\n      alt: \"Refresh Button\",\n      className: \"refreshImg\",\n      onClick: this.handleRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Please create some MITS\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  mits: state.ProveitReducer.mits,\n  avatar: state.ProveitReducer.account.avatar\n});\n\nexport default connect(mapStateToProps, {\n  getMitsAction\n})(ListMits);","map":{"version":3,"sources":["/Users/alvandsadeghi/Desktop/Projects/Final CryptoCopyright/Crypto-Copyright/src/Components/TabView/Mits/listMits.jsx"],"names":["React","Component","Grid","Card","CardHeader","CardContent","Avatar","Typography","CircularProgress","connect","getMits","getAvatar","getMitsAction","updateItem","getItem","ListMits","state","loading","handleRefresh","setState","mits","address","props","setTimeout","componentDidMount","avatar","avatarInfo","render","length","require","map","mit","symbol","content","owner","mapStateToProps","ProveitReducer","account"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\nimport { getMits } from \"../../../BlockchainLogic/MitLogic\";\nimport { getAvatar } from \"../../../BlockchainLogic/Faucet\";\nimport { getMitsAction } from \"../../../Actions/MitGeneration\";\nimport { updateItem, getItem } from \"../../../utils/idb\";\n\nimport \"./listMits.css\";\n\nclass ListMits extends Component {\n  state = {\n    loading: false\n  };\n  address;\n\n  async componentDidMount() {\n    let { avatar } = await getItem(\"accountInfo\");\n    let avatarInfo = await getAvatar(await avatar);\n    if (await avatarInfo) {\n      this.address = await avatarInfo.address;\n      let mits = await getMits([await this.address]);\n      await updateItem(\"mits\", mits);\n      this.props.getMitsAction(mits);\n    }\n  }\n\n  handleRefresh = async () => {\n    this.setState({ loading: true });\n    const mits = await getMits([this.address]);\n    this.props.getMitsAction(mits);\n    await updateItem(\"mits\", mits);\n    setTimeout(() => this.setState({ loading: false }), 1000);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.mits.length ? (\n          <React.Fragment>\n            {this.state.loading ? (\n              <CircularProgress color=\"#aaa\" size={20} />\n            ) : (\n              <img\n                src={require(\"../../../Assets/Logo/refresh-button.png\")}\n                alt=\"Refresh Button\"\n                className=\"refreshImg\"\n                onClick={this.handleRefresh}\n              />\n            )}\n            <Grid className=\"mitContainer\" container spacing={2}>\n              {this.props.mits.map(mit => (\n                <Grid\n                  key={mit.symbol}\n                  className=\"cardHolder\"\n                  item\n                  container\n                  sx={12}\n                  md={6}\n                >\n                  <Card className=\"card\" key={mit.symbol}>\n                    <CardHeader\n                      avatar={\n                        <Avatar\n                          alt=\"default metaverse mit icon\"\n                          src={require(\"../../../Assets/Logo/WechatIMG187.jpeg\")}\n                          aria-label=\"recipe\"\n                          className=\"avatar\"\n                        />\n                      }\n                      title={mit.content}\n                      subheader={`Owned By: ${mit.owner}`}\n                    />\n                    <CardContent>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        <strong>Your File Hash : </strong>\n                        {mit.symbol}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n           {this.state.loading ? (\n              <CircularProgress color=\"#aaa\" size={20} />\n            ) : (\n              <img\n                src={require(\"../../../Assets/Logo/refresh-button.png\")}\n                alt=\"Refresh Button\"\n                className=\"refreshImg\"\n                onClick={this.handleRefresh}\n              />\n            )}\n            <h4>Please create some MITS</h4>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  mits: state.ProveitReducer.mits,\n  avatar: state.ProveitReducer.account.avatar\n});\n\nexport default connect(mapStateToProps, { getMitsAction })(ListMits);\n"]},"metadata":{},"sourceType":"module"}