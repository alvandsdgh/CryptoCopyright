{"ast":null,"code":"/*\n* @Author: zyc\n* @Date:   2016-09-11 23:36:05\n* @Last Modified by:   unrealce\n* @Last Modified time: 2016-09-13 01:26:13\n*/\n'use strict';\n\nconst crypto = require('crypto');\n\nconst base58 = require('bs58');\n\nmodule.exports.encode = (data, prefix = '00', encoding = 'hex') => {\n  if (typeof data === 'string') {\n    data = new Buffer(data, encoding);\n  }\n\n  if (!(data instanceof Buffer)) {\n    throw new TypeError('\"data\" argument must be an Array of Buffers');\n  }\n\n  if (!(prefix instanceof Buffer)) {\n    prefix = new Buffer(prefix, encoding);\n  }\n\n  let hash = Buffer.concat([prefix, data]);\n  hash = crypto.createHash('sha256').update(hash).digest();\n  hash = crypto.createHash('sha256').update(hash).digest();\n  hash = Buffer.concat([prefix, data, hash.slice(0, 4)]);\n  return base58.encode(hash);\n};\n\nmodule.exports.decode = (string, encoding) => {\n  const buffer = new Buffer(base58.decode(string));\n  let prefix = buffer.slice(0, 1);\n  let data = buffer.slice(1, -4);\n  let hash = Buffer.concat([prefix, data]);\n  hash = crypto.createHash('sha256').update(hash).digest();\n  hash = crypto.createHash('sha256').update(hash).digest();\n  buffer.slice(-4).forEach((check, index) => {\n    if (check !== hash[index]) {\n      throw new Error('Invalid checksum');\n    }\n  });\n\n  if (encoding) {\n    prefix = prefix.toString(encoding);\n    data = data.toString(encoding);\n  }\n\n  return {\n    prefix,\n    data\n  };\n};","map":null,"metadata":{},"sourceType":"script"}